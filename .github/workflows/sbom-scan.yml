name: SBOM Vulnerability Scan

on:
  push:
    paths:
      - '**/*.json'  # Trigger on SBOM JSON files
      - '**/*.xml'   # Also trigger on XML format SBOMs
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read
  actions: write

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
          grype version

      - name: Create results directory
        run: mkdir -p scan-results

      - name: Scan SBOMs
        run: |
          # Find all SBOM files and scan them
          find . -type f \( -name "*.json" -o -name "*.xml" \) -exec sh -c '
            echo "Scanning SBOM: {}"
            mkdir -p scan-results
            echo "=== Scan Results for $(basename {}) ===" > "scan-results/$(basename {}).scan-results.txt"
            echo "Scan Date: $(date)" >> "scan-results/$(basename {}).scan-results.txt"
            echo "===================================" >> "scan-results/$(basename {}).scan-results.txt"
            grype sbom:{} --output table >> "scan-results/$(basename {}).scan-results.txt"
            echo -e "\nVulnerability Summary:" >> "scan-results/$(basename {}).scan-results.txt"
            echo "Critical: $(grype sbom:{} --output json | grep -c '"severity": "Critical"')" >> "scan-results/$(basename {}).scan-results.txt"
            echo "High: $(grype sbom:{} --output json | grep -c '"severity": "High"')" >> "scan-results/$(basename {}).scan-results.txt"
            echo "Medium: $(grype sbom:{} --output json | grep -c '"severity": "Medium"')" >> "scan-results/$(basename {}).scan-results.txt"
            echo "Low: $(grype sbom:{} --output json | grep -c '"severity": "Low"')" >> "scan-results/$(basename {}).scan-results.txt"
          ' \;
        continue-on-error: true

      - name: Upload scan results
        if: always()  # Upload results even if scanning fails
        uses: actions/upload-artifact@v4
        with:
          name: vulnerability-scan-results
          path: scan-results/
          retention-days: 90
          if-no-files-found: warn

      - name: Generate vulnerability summary
        if: always()
        run: |
          echo "### Vulnerability Scan Summary" > scan-results/summary.md
          echo "| SBOM File | Critical | High | Medium | Low |" >> scan-results/summary.md
          echo "|-----------|----------|------|--------|-----|" >> scan-results/summary.md
          for file in scan-results/*.scan-results.txt; do
            if [ -f "$file" ]; then
              filename=$(basename "$file" .scan-results.txt)
              crit=$(grep "Critical:" "$file" | awk '{print $2}')
              high=$(grep "High:" "$file" | awk '{print $2}')
              med=$(grep "Medium:" "$file" | awk '{print $2}')
              low=$(grep "Low:" "$file" | awk '{print $2}')
              echo "| $filename | $crit | $high | $med | $low |" >> scan-results/summary.md
            fi
          done
          cat scan-results/summary.md
