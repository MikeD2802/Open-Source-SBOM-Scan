name: SBOM Vulnerability Scan

on:
  push:
    paths:
      - "sboms/**/*.json"  # Trigger only when SBOMs in 'sboms/' are changed
      - "sboms/**/*.xml"
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write  # Needed to commit to the repo
  actions: write

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
          grype version

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Scan SBOMs and Save Results
        run: |
          now=$(date +'%Y-%m-%dT%H-%M')
          mkdir -p sboms  # Ensure the directory exists
          mkdir -p scan-results
          for sbom in $(find sboms/ -type f \( -name "*.json" -o -name "*.xml" \)); do
            base=$(basename "$sbom")
            folder="scan-results/${base}-${now}"
            mkdir -p "$folder"

            echo "Scanning SBOM: $sbom"
            
            # Save text output
            result_file="$folder/${base}.scan-results.txt"
            echo "=== Scan Results for $base ===" > "$result_file"
            echo "Scan Date: $(date)" >> "$result_file"
            echo "===================================" >> "$result_file"
            grype sbom:"$sbom" --output table >> "$result_file"
            echo -e "\nVulnerability Summary:" >> "$result_file"
            echo "Critical: $(grype sbom:$sbom --output json | grep -c '\"severity\": \"Critical\"')" >> "$result_file"
            echo "High: $(grype sbom:$sbom --output json | grep -c '\"severity\": \"High\"')" >> "$result_file"
            echo "Medium: $(grype sbom:$sbom --output json | grep -c '\"severity\": \"Medium\"')" >> "$result_file"
            echo "Low: $(grype sbom:$sbom --output json | grep -c '\"severity\": \"Low\"')" >> "$result_file"
            
            # Save JSON output
            json_file="$folder/${base}.scan-results.json"
            grype sbom:"$sbom" --output json > "$json_file"
          done
        continue-on-error: true

      - name: Generate vulnerability summary
        if: always()
        run: |
          echo "### Vulnerability Scan Summary" > scan-results/summary.md
          echo "| SBOM File | Critical | High | Medium | Low |" >> scan-results/summary.md
          echo "|-----------|----------|------|--------|-----|" >> scan-results/summary.md
          
          # First, find all scan result files
          for dir in scan-results/*/; do
            if [ -d "$dir" ]; then
              for file in "$dir"/*.scan-results.txt; do
                if [ -f "$file" ]; then
                  # Extract just the original SBOM filename without the timestamp
                  filename=$(basename "$dir" | sed 's/-[0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}T[0-9]\{2\}-[0-9]\{2\}$//')
                  crit=$(grep "Critical:" "$file" | awk '{print $2}')
                  high=$(grep "High:" "$file" | awk '{print $2}')
                  med=$(grep "Medium:" "$file" | awk '{print $2}')
                  low=$(grep "Low:" "$file" | awk '{print $2}')
                  echo "| $filename | $crit | $high | $med | $low |" >> scan-results/summary.md
                fi
              done
            fi
          done
          
          cat scan-results/summary.md

      - name: Commit and Push Results to sbom-scan-results Branch
        if: always()
        run: |
          git fetch origin sbom-scan-results || echo "No remote branch yet"
          git switch --force-create sbom-scan-results origin/sbom-scan-results || git switch sbom-scan-results

          # Restore scan-results and commit
          git add scan-results/
          git commit -m "Add SBOM scan results [skip ci]" || echo "No changes to commit"
          git push origin sbom-scan-results --force
